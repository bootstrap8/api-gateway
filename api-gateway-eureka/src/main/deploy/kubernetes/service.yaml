apiVersion: v1
kind: Service
metadata:
  name: api-gateway-eureka
  namespace: ${k8s_ns}
  labels:
    app: api-gateway-eureka
spec:
  clusterIP: None
  ports:
    - port: 30140
      targetPort: 30140
      protocol: TCP
      name: eureka
  selector:
    app: api-gateway-eureka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-gateway-eureka-statefulset
  namespace: ${k8s_ns}
spec:
  serviceName: api-gateway-eureka
  replicas: 1
  selector:
    matchLabels:
      name: api-gateway-eureka
      app: api-gateway-eureka
  template:
    metadata:
      labels:
        name: api-gateway-eureka
        app: api-gateway-eureka
    spec:
      restartPolicy: Always
      volumes:
        - name: logs
          hostPath:
            path: /apps/logs/api-gateway-eureka
      containers:
        - name: api-gateway-eureka-statefulset
          image: ${docker_prefix}/api-gateway-eureka:${tag}
          imagePullPolicy: Always
          livenessProbe:
            tcpSocket:
              port: 30140
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 240
          readinessProbe:
            tcpSocket:
              port: 30140
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 240
          resources:
            requests:
              cpu: '0.5'
              memory: 800Mi
            limits:
              cpu: '0.5'
              memory: 1Gi
          volumeMounts:
            - mountPath: /apps/logs
              name: logs
          ports:
            - containerPort: 30140
          env:
            - name: spring_profiles_active
              value: "${spring_profiles_active}"

